name: MyNews CI

on: [pull_request]

jobs:
  danger:
    name: Danger on pull request # GitHub上で識別しやすいのでジョブの名前をつけている
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v2
      # Gem Cache
      - name: Gem Cache
        uses: actions/cache@v2
        with:
          path: bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('Gemfile.lock') }} # change your gemfile path
          restore-keys: |
            ${{ runner.os }}-gems-
      # Run Bundle
      - name: Run Bundle
        run: |
          sudo gem install bundler
          bundle install
      - name: run ktlint
        run: |
          ./gradlew ktlintFormat
          ./gradlew ktlint
      - name: run danger
        if: always() # 常に実行
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: danger
  build:
    name: Build on pull request # GitHub上で識別しやすいのでジョブの名前をつけている
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v2
      # Using caches　←このセクションがキャッシュ
      - name: Using caches
        if: always() # 常に実行
        uses: actions/cache@v2
        with:
          path: ~/.gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      # Setting up JDK 1.8
      - name: set up JDK 1.8
        if: always() # 常に実行
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      # Build (Debug)
      - name: Build with Gradle
        if: always() # 常に実行
        run: ./gradlew assembleDebug
#  Test:
#    name: Unit Test Action
#    runs-on: ubuntu-latest (macos-latestだと動くので非採用)
#    steps:
#      - uses: actions/checkout@v2
##      # UI Test
#      - name: run tests
#        uses: reactivecircus/android-emulator-runner@v2
#        with:
#          api-level: 29
#          script: ./gradlew connectedAndroidTest