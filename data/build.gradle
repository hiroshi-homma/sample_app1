plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
}
apply from: "${rootDir.absolutePath}/ktlint.gradle"

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "String", "DOMAIN", "\"http://tk2-246-32569.vs.sakura.ne.jp/test_news/\""
            buildConfigField "Long", "API_READ_TIMEOUT", "120L"
            buildConfigField "Long", "API_CONNECT_TIMEOUT", "120L"
        }
        release {
            debuggable false
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "String", "DOMAIN", "\"http://tk2-246-32569.vs.sakura.ne.jp/test_news/\""
            buildConfigField "Long", "API_READ_TIMEOUT", "120L"
            buildConfigField "Long", "API_CONNECT_TIMEOUT", "120L"
        }
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    testImplementation project(':testData')
    // Gson
    implementation "com.google.code.gson:gson:$gson"
    // Dagger
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    // Network
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp"
    implementation "com.squareup.okhttp3:okhttp:$okhttp"
    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    // Room
    implementation "androidx.room:room-runtime:$room"
    kapt "androidx.room:room-compiler:$room"
    implementation "androidx.room:room-ktx:$room"
    // Log
    implementation "com.jakewharton.timber:timber:$timber"

    // Unit Test
    testImplementation "junit:junit:$junit"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "org.mockito:mockito-inline:$mockitoVersion"
    testImplementation "org.assertj:assertj-core:$assertjCore"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitoKotlin"
    testImplementation "androidx.test:core:$androidxTestCore"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"
    testImplementation "org.hamcrest:hamcrest-library:$hamcrestVersion"
    testImplementation "io.mockk:mockk:$mockkVersion"
    testImplementation "io.mockk:mockk-android:$mockkVersion"
    testImplementation "androidx.arch.core:core-testing:$core_testing"
    testImplementation "com.google.truth:truth:$truth"
    testImplementation "com.squareup.okhttp3:mockwebserver:$okhttp"
    testImplementation "androidx.room:room-testing:$room"
}